cmake_minimum_required(VERSION 3.0.0)

project(Gobang)

if(${MINGW})
    if(NOT WINDOWS_SDK_INCLUDE_DIR)
        get_filename_component(WINDOWS_SDK_ROOT_DIR
            "[HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Microsoft\\Windows Kits\\Installed Roots;KitsRoot10]" REALPATH)
        file(GLOB WINDOWS_SDK_INCS LIST_DIRECTORIES true "${WINDOWS_SDK_ROOT_DIR}/Include/10.0.*.*")
        list(SORT WINDOWS_SDK_INCS ORDER DESCENDING)
        list(GET WINDOWS_SDK_INCS 0 WINDOWS_SDK_INCLUDE_DIR)
    endif()

    if(NOT EXISTS ${WINDOWS_SDK_INCLUDE_DIR})
        message(FATAL_ERROR "Could not find the directory; ${WINDOWS_SDK_INCLUDE_DIR}."
            "You can fix by the cmake flag; -DWINDOWS_SDK_INCLUDE_DIR=<Path>")
    endif()

    message(STATUS "Detected Windows SDK: ${WINDOWS_SDK_INCLUDE_DIR}")
endif()

include_directories(${WINDOWS_SDK_INCLUDE_DIR}/include/10.0.20348.0/ucrt)
include_directories(${WINDOWS_SDK_INCLUDE_DIR}/include/10.0.20348.0/winrt)
include_directories(${WINDOWS_SDK_INCLUDE_DIR}/include/10.0.20348.0/shared)
include_directories(${WINDOWS_SDK_INCLUDE_DIR}/include/10.0.20348.0/um)

# OUTPUT PATH
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)

# INCLUDE DIR
include_directories(${PROJECT_SOURCE_DIR}/include)

# SUB DIR
add_subdirectory(src)

# ADD DEFIN & ARGS
add_definitions(-std=c++17)
set(CMAKE_BUILD_TYPE DEBUG)
set(CMAKE_CXX_FLAGS_DEBUG $ENV{CXXFLAGS} "-g -Wall -O0")
set(CMAKE_CXX_FLAGS_RELEASE $ENV{CCXXFLAGS} " -O3 -Wall ")

add_executable(${PROJECT_NAME} main.cpp)

# LIB & LINK
set(EASYX_LIB ${PROJECT_SOURCE_DIR}/lib/libeasyx.a)

find_library(WINMM NAMES Winmm)
target_link_libraries(${PROJECT_NAME} SRCS ${EASYX_LIB} WINMM)